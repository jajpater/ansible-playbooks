---
- name: Ensure build directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ guile_src_dir }}"
  become: yes

- name: Check if Guile is already installed
  stat:
    path: "{{ guile_prefix }}/bin/guile"
  register: guile_installed

- name: Get installed Guile version
  command: "{{ guile_prefix }}/bin/guile --version"
  register: guile_current_version
  when: guile_installed.stat.exists and not ansible_check_mode
  changed_when: false
  failed_when: false

- name: Determine if installation is needed
  set_fact:
    guile_needs_install: >-
      {{ not guile_installed.stat.exists or 
         (guile_current_version is defined and guile_current_version.stdout is defined and
          guile_version not in guile_current_version.stdout) }}

- name: Debug installation decision
  debug:
    msg: |
      Guile installation check:
      - Guile binary exists: {{ guile_installed.stat.exists }}
      - Current version: {{ guile_current_version.stdout | default('Not installed') }}
      - Target version: {{ guile_version }}
      - Needs install: {{ guile_needs_install }}

- block:
    - name: Download Guile source
      get_url:
        url: "{{ guile_download_url }}"
        dest: "/tmp/guile-{{ guile_version }}.tar.xz"
        mode: "0644"

    - name: Extract Guile source
      unarchive:
        src: "/tmp/guile-{{ guile_version }}.tar.xz"
        dest: "/tmp"
        remote_src: true
        creates: "{{ guile_src_dir }}/configure"

    - name: Create build directory
      file:
        path: "{{ guile_build_dir }}"
        state: directory
        mode: "0755"

    - name: Configure Guile build
      command: >
        ../configure {{ guile_configure_options | join(' ') }}
      args:
        chdir: "{{ guile_build_dir }}"
        creates: "{{ guile_build_dir }}/Makefile"
      environment:
        PKG_CONFIG_PATH: "{{ guile_prefix }}/lib/pkgconfig:/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig"
        LD_LIBRARY_PATH: "{{ guile_prefix }}/lib:/usr/lib:/usr/lib/x86_64-linux-gnu"

    - name: Compile Guile
      command: make -j{{ ansible_processor_vcpus | default(2) }}
      args:
        chdir: "{{ guile_build_dir }}"
        creates: "{{ guile_build_dir }}/meta/guile"

    - name: Install Guile system-wide
      command: make install
      args:
        chdir: "{{ guile_build_dir }}"
        creates: "{{ guile_prefix }}/bin/guile"
      become: yes

    - name: Update dynamic linker cache
      command: ldconfig
      become: yes

    - name: Create Guile environment script
      copy:
        dest: /etc/profile.d/guile.sh
        mode: "0644"
        content: |
          # GNU Guile {{ guile_version }} environment
          export PATH="{{ guile_prefix }}/bin:$PATH"
          export LD_LIBRARY_PATH="{{ guile_prefix }}/lib:${LD_LIBRARY_PATH:-}"
          export PKG_CONFIG_PATH="{{ guile_prefix }}/lib/pkgconfig:${PKG_CONFIG_PATH:-}"
          export GUILE_LOAD_PATH="{{ guile_prefix }}/share/guile/{{ guile_version }}:${GUILE_LOAD_PATH:-}"
      become: yes

    - name: Verify Guile installation
      command: "{{ guile_prefix }}/bin/guile --version"
      register: guile_verify
      changed_when: false

    - name: Display Guile version
      debug:
        msg: "Guile installed successfully: {{ guile_verify.stdout_lines[0] }}"

    - name: Clean up source files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/guile-{{ guile_version }}.tar.xz"
        - "{{ guile_src_dir }}"

  when: guile_needs_install