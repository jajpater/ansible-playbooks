- name: Ensure dependencies for https downloads (older systems)
  apt:
    name:
      - ca-certificates
      - gnupg
      - apt-transport-https
    state: present
  when: ansible_os_family == "Debian"

- name: Fetch Duplicati releases from GitHub API
  uri:
    url: "https://api.github.com/repos/duplicati/duplicati/releases"
    return_content: true
  register: duplicati_releases

- name: Filter releases by channel
  set_fact:
    duplicati_filtered_releases: >
      {%- if duplicati_channel == 'stable' -%}
        {{ duplicati_releases.json | selectattr('prerelease', 'equalto', false) | list }}
      {%- elif duplicati_channel == 'beta' -%}
        {{ duplicati_releases.json | selectattr('tag_name', 'search', '_beta_') | list }}
      {%- elif duplicati_channel == 'canary' -%}
        {{ duplicati_releases.json | selectattr('tag_name', 'search', '_canary_') | list }}
      {%- elif duplicati_channel == 'experimental' -%}
        {{ duplicati_releases.json | selectattr('tag_name', 'search', '_experimental_') | list }}
      {%- else -%}
        {{ duplicati_releases.json | selectattr('prerelease', 'equalto', false) | list }}
      {%- endif -%}

- name: Get latest release for channel
  set_fact:
    duplicati_latest_release: "{{ duplicati_filtered_releases | first | default({}) }}"

- name: Display found releases for debugging
  debug:
    msg: "Found {{ duplicati_filtered_releases | length }} releases for channel '{{ duplicati_channel }}'"

- name: Show selected release version
  debug:
    msg: "Selected Duplicati version: {{ duplicati_latest_release.tag_name | default('None') }}"
  when: duplicati_latest_release != {}

- name: Fail if no release found for channel
  fail:
    msg: "No Duplicati release found for channel '{{ duplicati_channel }}'. Available channels: stable, beta, canary, experimental"
  when: duplicati_latest_release == {}

- name: Find matching .deb asset for architecture
  set_fact:
    duplicati_deb_asset: >
      {{ duplicati_latest_release.assets |
         selectattr('name', 'search', duplicati_arch + '\.deb$') |
         first | default({}) }}

- name: Fail if no matching .deb asset found
  fail:
    msg: "No Duplicati .deb found for arch='{{ duplicati_arch }}' in release '{{ duplicati_latest_release.tag_name }}'"
  when: duplicati_deb_asset == {}

- name: Set download URL and filename
  set_fact:
    duplicati_url: "{{ duplicati_deb_asset.browser_download_url }}"
    duplicati_filename: "{{ duplicati_deb_asset.name }}"

- name: Show package information
  debug:
    msg: "Installing Duplicati {{ duplicati_latest_release.tag_name }} from {{ duplicati_channel }} channel"

- name: Download Duplicati .deb
  get_url:
    url: "{{ duplicati_url }}"
    dest: "/tmp/{{ duplicati_filename }}"
    mode: "0644"

- name: Install Duplicati package
  apt:
    deb: "/tmp/{{ duplicati_filename }}"
    state: present
  register: dup_install

# Optional: try to enable & start the service if present
- name: Enable and start duplicati (best-effort)
  service:
    name: duplicati
    state: started
    enabled: true
  ignore_errors: true
