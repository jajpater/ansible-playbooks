---
- name: Ensure XDG directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ guix_config_dir }}"
    - "{{ guix_cache_dir }}"
    - "{{ guix_data_dir }}"
    - "{{ ansible_env.HOME }}/.local/bin"
    - "{{ ansible_env.HOME }}/.local/src"

- name: Check if user Guix is already installed
  stat:
    path: "{{ guix_profile_dir }}/bin/guix"
  register: guix_user_installed

- name: Debug Guix installation check
  debug:
    msg: |
      User Guix installation check:
      - User profile path: {{ guix_profile_dir }}/bin/guix
      - User profile exists: {{ guix_user_installed.stat.exists }}
      - Installation method: {{ guix_install_method }}

- name: Install Guix for user (latest version)
  block:
    - name: Download Guix binary installer
      get_url:
        url: "{{ guix_binary_installer_url }}"
        dest: "{{ guix_binary_file }}"
        mode: "0644"

    - name: Extract Guix binary to user directory
      unarchive:
        src: "{{ guix_binary_file }}"
        dest: "{{ ansible_env.HOME }}/.local"
        remote_src: true
        creates: "{{ ansible_env.HOME }}/.local/var/guix"
        # Note: This extracts to .local/var/guix, .local/gnu, etc.

    - name: Create user directory in Guix profiles
      file:
        path: "{{ ansible_env.HOME }}/.local/var/guix/profiles/per-user/{{ ansible_user_id }}"
        state: directory
        mode: "0755"

    - name: Create initial user Guix profile
      file:
        src: "{{ ansible_env.HOME }}/.local/var/guix/profiles/per-user/root/current-guix"
        dest: "{{ ansible_env.HOME }}/.local/var/guix/profiles/per-user/{{ ansible_user_id }}/guix-profile"
        state: link
        force: true

    - name: Create user Guix profile symlink
      file:
        src: "{{ ansible_env.HOME }}/.local/var/guix/profiles/per-user/{{ ansible_user_id }}/guix-profile"
        dest: "{{ guix_profile_dir }}"
        state: link
        force: true

    - name: Set up Guix environment in bashrc
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: "{{ item }}"
        create: true
        regexp: "^{{ item.split('=')[0] | regex_escape }}"
        state: present
      loop:
        - 'export GUIX_PROFILE="{{ guix_profile_dir }}"'
        - 'test -f "$GUIX_PROFILE/etc/profile" && . "$GUIX_PROFILE/etc/profile"'
        - 'export PATH="$GUIX_PROFILE/bin:$PATH"'

    - name: Initialize user Guix profile
      shell: |
        export GUIX_PROFILE="{{ guix_profile_dir }}"
        . "$GUIX_PROFILE/etc/profile"
        {{ guix_profile_dir }}/bin/guix pull
      args:
        creates: "{{ guix_config_dir }}/current"
      environment:
        PATH: "{{ guix_profile_dir }}/bin:{{ ansible_env.PATH }}"

    - name: Clean up downloaded binary
      file:
        path: "{{ guix_binary_file }}"
        state: absent

  when: not guix_user_installed.stat.exists

- name: Verify user Guix installation
  command: "{{ guix_profile_dir }}/bin/guix --version"
  register: guix_user_verify
  changed_when: false
  when: guix_user_installed.stat.exists

- name: Display user Guix version
  debug:
    msg: "User Guix installed successfully: {{ guix_user_verify.stdout_lines[0] }}"
  when: guix_user_verify is defined and guix_user_verify.stdout_lines is defined and guix_user_verify.stdout_lines | length > 0
