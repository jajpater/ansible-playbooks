- name: User setup (home)
  hosts: localhost
  connection: local
  gather_facts: true
  become: false

  vars:
    user_home: "{{ ansible_env.HOME }}"
    user_bin: "{{ ansible_env.HOME }}/.local/bin"

  pre_tasks:
    - name: Ensure XDG dirs
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ user_bin }}"
        - "{{ user_home }}/.local/share"
        - "{{ user_home }}/.config"
        - "{{ user_home }}/.cache"

  roles:
    - role: tools/source_code_pro
      tags: [source-code-pro]

    # Individual tool roles (per-tool configuration)
    - role: tools/greenclip
      tags: [greenclip]
      when: >
        tool_installation_method == 'individual' or
        (tool_installation_method == 'hybrid' and 
         tool_installation_config.greenclip.method == 'individual')
      
    - role: tools/zoxide
      tags: [zoxide]
      when: >
        tool_installation_method == 'individual' or
        (tool_installation_method == 'hybrid' and 
         tool_installation_config.zoxide.method == 'individual')
      
    - role: tools/fzf
      tags: [fzf]
      when: >
        tool_installation_method == 'individual' or
        (tool_installation_method == 'hybrid' and 
         tool_installation_config.fzf.method == 'individual')

    - role: tools/typst
      tags: [typst]

    - role: tools/grb
      tags: [grb]

    - role: tools/npm
      tags: [npm, nodejs]

      #    - role: infra/systemd_user_timer
      #      tags: [timers]

    - role: tools/texlive_tlmgr
      tags: [texlive, tlmgr]

    - role: tools/wakatime_cli
      tags: [wakatime, wakatime-cli]

    - role: tools/rust
      tags: [rust]
      when: >
        tool_installation_method == 'individual' or
        (tool_installation_method == 'hybrid' and 
         tool_installation_config.rust.method == 'individual')
      
    - role: tools/rbw
      tags: [rbw, bitwarden, password-manager]
      when: >
        tool_installation_method == 'individual' or
        (tool_installation_method == 'hybrid' and 
         tool_installation_config.rbw.method == 'individual')

    # Optional: Latest user-level Guix installation (for bleeding edge users)
    - role: tools/guix
      tags: [guix, package-manager, latest]
      when: install_user_guix or guix_installation_method == 'user'

    # Guix-based tool installation (enabled when any tool uses Guix)
    - role: tools/guix-tools
      tags: [guix-tools, development, cli-tools]
      when: use_guix_for_tools

    - role: tools/claude-code
      tags: [claude-code, tools]

    - role: tools/languagetool
      tags: [languagetool, grammar, writing, proofreading]

    - role: tools/gdu
      tags: [gdu, disk-usage, analyzer]

    - role: tools/atuin
      tags: [atuin, shell, history]

    - role: tools/github_script
      vars:
        github_script_config: "translate-shell"
      tags: [github-script, translate-shell, translator]

    - role: tools/github_script
      vars:
        github_script_config: "vimv"
      tags: [github-script, vimv, file-rename]


    - role: tools/spacemacs
      tags: [spacemacs, emacs, editor]

    - role: tools/mu
      tags: [mu, mail, maildir]
      when: >
        tool_installation_method == 'individual' or
        (tool_installation_method == 'hybrid' and 
         tool_installation_config.mu.method == 'individual')

    - role: tools/scantailor
      tags: [scantailor, scanner, documents]
      when: scantailor_install_appimage

    - role: infra/shell-aliases
      tags: [shell-aliases, aliases]
      when: scantailor_auto_aliases

#    - role: tools/ebooks
#      tags: [ebooks, calibre-plugins]

